lua_shared_dict prometheus_metrics 10M;
lua_package_path "/lua-modules/?.lua";

init_by_lua_block {
  function string.starts(String,Start)
    return string.sub(String,1,string.len(Start))==Start
  end

  -- Load Prometheus module
  prometheus = require("prometheus").init("prometheus_metrics")
  metric_requests = prometheus:counter(
    "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
  metric_latency = prometheus:histogram(
    "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})


  -- Load HTTP2 Push list
  local filePath = "/usr/share/nginx/www/http2-push-map.txt"
  local fileContent = io.open(filePath, "r");
  httpPushList = {}

  if fileContent then
    for line in fileContent:lines() do
      local url, assets = line:match("([^|]+)|(.+)")
      httpPushList[url] = assets
    end

    io.close(fileContent)
  else
    print("File "..filePath.." doesn\'t exist")
  end
}

log_by_lua_block {
  metric_requests:inc(1, {ngx.var.host, ngx.var.status})
  metric_latency:observe(ngx.now() - ngx.req.start_time(), {ngx.var.host})
}